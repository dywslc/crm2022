<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pn.mapper.UserMapper">
<!--    通过账号查找用户的方法-->
    <select id="findUserByCode" resultType="user">
        select * from user_info where user_code=#{userCode} and is_delete = 0
    </select>

<!--    查询用户行数的方法-->
    <select id="findUserRowCount" resultType="integer">
        select count(*) from user_info
        <where>
            <if test="userCode != null and userCode !=''">
                user_code like "%"#{userCode}"%"
            </if>
            <if test="userType != null and userType != ''">
               and user_type = #{userType}
            </if>
            <if test="userState != null and userState != ''">
                and user_state = #{userState}
            </if>
            and is_delete = 0

        </where>
    </select>

<!--    分页查询用户的方法-->
    <select id="findUserByPage" resultType="user">
        select t1.*,t2.user_code getCode
        from user_info t1 ,user_info t2
        where t1.create_by = t2.user_id and t1.is_delete = 0
        <if test="user.userCode != null and user.userCode != ''">
            and t1.user_code like "%"#{user.userCode}"%"
        </if>
        <if test="user.userType != null and user.userType != ''">
            and t1.user_type = #{user.userType}
        </if>
        <if test="user.userState != null and user.userState != ''">
            and t1.user_state = #{user.userState}
        </if>
        order by t1.create_time desc
        limit #{page.limitIndex},#{page.pageSize}


    </select>

    <insert id="insertUser">
        insert into user_info values(
            null,#{userCode},#{userName},#{userPwd},null,0,0,#{createBy},now(),null,null
        )
    </insert>

    <update id="updataUserById">
        update user_info set user_state=#{userState} where user_id = #{userId}
    </update>

    <select id="selectRoleByUId" resultType="role">
        select role.* from user_role join role on user_role.role_id = role.role_id
        where user_role.user_id = #{userId} and role_state = 1
    </select>

    <delete id="deleteUserRoleByUId">
        delete from user_role where user_id = #{userId}
    </delete>

    <insert id="insertUserRole">
        insert into user_role values (
            null,#{roleId},#{userId}
                                     )
    </insert>

    <select id="selectRoleByRname" resultType="java.lang.Integer">
        select role_id from role where role_name = #{Rname}
    </select>

    <delete id="deleteUserByUId">
        delete from user_info where user_id=#{userId}
    </delete>

    <update id="setIsDeleteByUid">
        update user_info set is_delete = 1 where user_id = #{userId}
    </update>

    <update id="setUserNameByUid">
        update user_info set user_name = #{user.userName},update_by=#{user.updateBy},update_time=now()
        where user_id=#{user.userId}
    </update>

    <update id="setUserPwdByUid">
        update user_info set user_pwd = 'c431d451c81e75ffac75a640590ed0a1' where user_id=#{userId}
    </update>




</mapper>
